import java.util.* ;
import java.io.*; 
/************************************************************

    Following is the TreeNode class structure

    class TreeNode<T>
    {
       public:
        T data;
        TreeNode<T> left;
        TreeNode<T> right;

        TreeNode(T data)
        {
            this.data = data;
            left = null;
            right = null;
        }
    };

************************************************************/

public class Solution 
{
    public static int lowestCommonAncestor(TreeNode<Integer> root, int x, int y) 
    {
        ArrayList<Integer> arr1=new ArrayList<>();
        ArrayList<Integer> arr2=new ArrayList<>();
        search(arr1,root,x);
        search(arr2,root,y);
        for(int i=arr2.size()-1;i>-1;i--){
            if(arr1.contains(arr2.get(i))){
                return arr2.get(i);
            }
        }
        return -1;
    }
    public static boolean search(ArrayList<Integer> arr,TreeNode<Integer> n,int tar){
      if(n==null){
        return false;
      }
      if(n.data==tar){
          arr.add(n.data);
        return true;
      }
      arr.add(n.data);
      if(search(arr,n.left,tar)){
        return true;
      }
      if(search(arr,n.right,tar)){
        return true;
      }
      arr.remove(arr.size()-1);
      return false;
    }
}
