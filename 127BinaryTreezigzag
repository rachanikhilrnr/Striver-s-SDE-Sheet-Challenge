import java.util.* ;
import java.io.*; 
/*
	Following is the class used to represent the object/node of the Binary Tree

	class BinaryTreeNode<T> {
	    T data;
	    BinaryTreeNode<T> left;
	    BinaryTreeNode<T> right;

	    public BinaryTreeNode(T data) {
	        this.data = data;
	    }
	}
*/

public class Solution {
	public static List<Integer> zigZagTraversal(BinaryTreeNode<Integer> root) {
		List<Integer> arr=new ArrayList<>();
		if(root==null){
			return arr;
		}
		Queue<BinaryTreeNode> q=new LinkedList<>();
		q.add(root);
		traverse(q,arr,1);
		return arr;
	}
	public static void traverse(Queue<BinaryTreeNode> q,List<Integer> arr,int cnt){
		Queue<BinaryTreeNode> dummy=new LinkedList<>();
		List<Integer> lst=new ArrayList<>();
		while(!q.isEmpty()){
			BinaryTreeNode<Integer> node=q.poll();
			lst.add(node.data);
			if(node.left!=null){
				dummy.add(node.left);
			}
			if(node.right!=null){
				dummy.add(node.right);
			}
		}
		if(cnt%2==1){
			for(int i=0;i<lst.size();i++){
				arr.add(lst.get(i));
			}
		}
		else{
			for(int i=lst.size()-1;i>=0;i--){
				arr.add(lst.get(i));
			}
		}
		if(!dummy.isEmpty()){
			traverse(dummy,arr,cnt+1);
		}
	}
}
